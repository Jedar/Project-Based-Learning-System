<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="edu.fudan.projectbasedlearning.dao.UserMapper">
  <resultMap id="BaseResultMap" type="edu.fudan.projectbasedlearning.pojo.User">
    <!--
      WARNING - @mbg.generated
    -->
    <id column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="role" jdbcType="INTEGER" property="role" />
  </resultMap>
  <!-- 向user表中插入，会自动将生成的user_id填充到user对象中 -->
  <insert id="insertUser" useGeneratedKeys="true" keyProperty="userId" keyColumn="user_id">
        insert into user(username, password, role) values(#{username}, #{password}, #{role})
  </insert>
  <select id="getStudent" parameterType="int" resultType="hashmap">
        SELECT * FROM user inner join student on user.user_id = student.s_id WHERE s_id = #{studentId}
  </select>

  <select id="getTeacher" parameterType="int" resultType="hashmap">
        SELECT * FROM user inner join teacher on user.user_id = teacher.t_id WHERE t_id = #{teacherId}
  </select>
  <!-- 登陆通过用户名密码查血 -->
    <select id="findByUserNameAndPassword" resultType="edu.fudan.projectbasedlearning.pojo.User">
        select * from user where username = #{username} and password = #{password}
    </select>

  <select id="getStudentInfo" parameterType="int" resultType="hashmap">
    select user_id as studentId, username, gender, school, profile from user inner join student on user.user_id = student.s_id where s_id = #{studentId}
  </select>

  <update id="modifyStudentInfo" parameterType="hashmap">
    update user set username = #{username}, password = #{password} where user_id = #{studentId};
    update student set gender = #{gender}, profile = #{profile} where s_id = #{studentId}
  </update>

  <select id="getTeacherInfo" parameterType="int" resultType="hashmap">
    select user_id as teacherId, username, gender, school, profile from user inner join teacher on user.user_id = teacher.t_id where t_id = #{teacherId}
  </select>

  <update id="modifyTeacherInfo" parameterType="hashmap">
    update user set username = #{username}, password = #{password} where user_id = #{teacherId};
    update teacher set gender = #{gender}, profile = #{profile} where t_id = #{teacherId}
  </update>
</mapper>

